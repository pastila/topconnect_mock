# Learn more about services, parameters and containers at
# https://symfony.com/doc/current/service_container.html
parameters:
#parameter_name: value

services:
  # default configuration for services in *this* file
  _defaults:
    # automatically injects dependencies in your services
    autowire: true
    # automatically registers your services as commands, event subscribers, etc.
    autoconfigure: true
    # this means you cannot fetch services directly from the container via $container->get()
    # if you need to do this, you can override this setting on individual services
    public: false
    bind:
      $webDir: '%kernel.root_dir%/../web'

  # makes classes in src/AppBundle available to be used as services
  # this creates a service per class whose id is the fully-qualified class name
  AppBundle\:
    resource: '../../src/AppBundle/*'
    # you can exclude directories or files
    # but if a service is unused, it's removed anyway
    exclude: '../../src/AppBundle/{Admin,Entity,Service,Tests}'

  AppBundle\Service\:
    resource: '../../src/AppBundle/Service/*'
    public: true

  # controllers are imported separately to make sure they're public
  # and have a tag that allows actions to type-hint services
  AppBundle\Controller\:
    resource: '../../src/AppBundle/Controller'
    public: true
    tags: [ 'controller.service_arguments' ]

  Accurateweb\SettingBundle\Model\Manager\SettingManagerInterface:
    alias: 'aw.settings.manager'

  app.admin.card_admin:
    class: AppBundle\Admin\CardAdmin
    arguments: [~, AppBundle\Entity\Card\Card, AppBundle:Admin/CardAdmin]
    calls:
      - [ addChild, [ '@app.admin.record_admin', 'card' ] ]
      - [ addChild, [ '@app.datapackagerecord.admin', 'card' ] ]
    tags:
        - { name: sonata.admin, group: 'catalog', manager_type: orm, label: 'Симки' }

  app.datapackagerecord.admin:
    class: AppBundle\Admin\DataPackageRecordAdmin
    arguments: [~, AppBundle\Entity\Package\DataPackageRecord, ~]
    tags:
      - { name: sonata.admin, group: 'catalog', manager_type: orm, label: 'Пакеты', show_in_dashboard: false }

  app.admin.service_admin:
    class: AppBundle\Admin\ServiceAdmin
    arguments: [~, AppBundle\Entity\Card\CardService, ~]
    tags:
        - { name: sonata.admin, group: 'catalog', manager_type: orm, label: 'Сервисы' }

  app.admin.account_admin:
    class: AppBundle\Admin\AccountAdmin
    arguments: [~, AppBundle\Entity\Account\Account, ~]
    tags:
        - { name: sonata.admin, group: 'catalog', manager_type: orm, label: 'Аккаунт' }

  app.admin.transaction_admin:
    class: AppBundle\Admin\TransactionAdmin
    arguments: [~, AppBundle\Entity\Transaction\Transaction, ~]
    tags:
        - { name: sonata.admin, group: 'catalog', manager_type: orm, label: 'Транзакции' }

  app.admin.record_admin:
    class: AppBundle\Admin\RecordAdmin
    arguments: [~, AppBundle\Entity\Record\Record, ~]
    tags:
        - { name: sonata.admin, group: 'catalog', manager_type: orm, label: 'Звонки', show_in_dashboard: false }

  app.admin.data_package_admin:
    class: AppBundle\Admin\DataPackageAdmin
    arguments: [~, AppBundle\Entity\Package\DataPackage, ~]
    tags:
        - { name: sonata.admin, group: 'catalog', manager_type: orm, label: 'Пакеты интернета' }